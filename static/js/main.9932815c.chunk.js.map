{"version":3,"sources":["model/Question.js","NumberInput.js","QuestionForm.js","QuestionForm2.js","PracticeSummary.js","model/Evaluator.js","tools/random.js","tools/generator.js","StudentSession.js","Checkout.js","serviceWorker.js","index.js"],"names":["Question","firstNum","secondNum","operation","submittedAnswer","submissionTime","this","expectedAnswer","result","question","qsWithAnswer","qsWithResult","questionWithAnswers","NumberFormatCustom","props","inputRef","onChange","other","getInputRef","onValueChange","values","target","name","value","thousandSeparator","isNumericString","prefix","NumberInput","React","forwardRef","ref","handleChange","callback","window","requestAnimationFrame","el","document","getElementById","focus","select","Fragment","TextField","label","autoFocus","onKeyDown","e","keyCode","length","handleTab","size","id","inputProps","InputProps","inputComponent","style","fontSize","QuestionForm","initialState","numberformat","firstInput","secondInput","submissionHandler","useState","setValues","htmlElRef","useRef","current","useFocus","setInputFocus","questionHandler","event","parseFloat","Date","now","console","log","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","sm","ButtonGroup","color","aria-label","Button","borderStyle","onClick","QuestionForm2","text","number","startsWith","getMathRender","useStyles","makeStyles","table","minWidth","PracticeSummary","classes","rows","questions","incorrect","filter","q","TableContainer","component","Paper","Table","className","TableHead","TableRow","key","TableCell","align","TableBody","toFixed","map","row","scope","toLocaleTimeString","partition","require","groupBy","countBy","input","reduce","acc","curr","operations","a","b","answer","junior_addition","junior_counting","junior_subtraction","junior_multiplication","addition","multiplication","subtraction","division","Math","sqrt","cbrt","Evaluator","func","abs","forEach","groupByOperations","JSON","stringify","results","filteredWins","wins","concat","apply","filteredNeedPractice","needPractice","shuffle","difference","Random","min","max","ceil","floor","random","excludes","sequence","Array","from","keys","i","indexOf","generated","parseInt","Generator","steps","range","shuffled","getNext","head","tail","getRandomIntInclusiveWithExceptions","inputs","firstOnes","secondOnes","firstTens","secondTens","ones","getRandomIntInclusive","theme","root","margin","width","StudentSession","localSession","setLocalSession","handleOperation","listItems","Object","entries","sort","level","FormControlLabel","control","Radio","FormControl","FormLabel","RadioGroup","noValidate","autoComplete","Copyright","Link","href","getFullYear","appBar","position","layout","marginLeft","marginRight","breakpoints","up","paper","marginTop","marginBottom","padding","stepper","buttons","display","justifyContent","button","cubeGenerator","getStatefulShuffledGenerator","mathOperation","generator","Checkout","setQuestions","sid","session","setSession","newQuestions","questionWithResult","evaluateQuestion","useEffect","localStorage","setItem","generatedNumbers","randomNumbers","getTwoNumbers","getCommonBase10sComplement","getNumberEndsWith5","getSameTens","getGeneratorFor","questionForm","CssBaseline","AppBar","Toolbar","noWrap","sessionTime","toISOString","dir","Card","details","CardContent","content","src","alt","height","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9932815c.chunk.js","sourcesContent":["export default class  Question {\n  constructor(firstNum, secondNum, operation, submittedAnswer, submissionTime) {\n    this.firstNum = firstNum;\n    this.secondNum = secondNum;\n    this.operation = operation;\n    this.submittedAnswer = submittedAnswer;\n    this.submissionTime = submissionTime;\n    this.expectedAnswer = null;\n    this.result = null;\n  }\n  static questionWithAnswers(question, expectedAnswer){\n    let qsWithAnswer = new Question(question.firstNum, question.secondNum, question.operation, question.submittedAnswer, question.submissionTime);\n    qsWithAnswer.expectedAnswer = expectedAnswer;\n    qsWithAnswer.result = null;\n    return qsWithAnswer;\n  }\n  static questionWithResult(question, expectedAnswer, result){\n    let qsWithResult = this.questionWithAnswers(question, expectedAnswer);\n    qsWithResult.result = result;\n    return qsWithResult;\n  }  \n}\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport NumberFormat from \"react-number-format\";\nimport PropTypes from \"prop-types\";\n\n\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst NumberInput = React.forwardRef((props, ref) => {\n\n  const { value, handleChange, callback } = props;\n\n  const setInputFocus = () => {\n    let el = document.getElementById(\"formatted-numberformat-input\");\n    if(el!=null) {\n      el.focus()\n      el.select();  \n    }\n  }\n\n  window.requestAnimationFrame(setInputFocus);\n\n  const handleTab = (e, callback) => {\n    const KEYCODE_TAB = 9;\n    const KEYCODE_ENTER = 13;\n    if (e.keyCode === KEYCODE_TAB || e.keyCode === KEYCODE_ENTER) {\n      if (value.length >= 1) {\n        callback(e)\n      }\n    }\n  }\n  \n  const submit = (e) => {\n    handleChange(e)\n  }\n\n  return (\n    <React.Fragment>\n      <TextField\n        label=\"\"\n        value={value}\n        autoFocus \n        onKeyDown={e => handleTab(e, callback)}\n        onChange={submit}\n        name=\"numberformat\"\n        size=\"medium\"\n        id=\"formatted-numberformat-input\"\n        inputProps={{}} \n        InputProps={{\n          inputComponent: NumberFormatCustom,\n          style: {fontSize: '30px'}\n        }}\n    />\n  </React.Fragment>);\n})\n\nexport default NumberInput","import React,{useRef} from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button } from \"@material-ui/core\";\nimport { ButtonGroup } from \"@material-ui/core\";\nimport Question from \"./model/Question\";\nimport NumberInput from \"./NumberInput\";\n\n\nconst useFocus = () => {\n  const htmlElRef = useRef(null)\n  const setFocus = () => {htmlElRef.current &&  htmlElRef.current.focus()}\n\n  return [ htmlElRef, setFocus ] \n}\n\nconst QuestionForm = React.forwardRef((props, ref) => {\n\n  const initialState = { numberformat: \"\" }\n  const { firstInput, secondInput, operation, submissionHandler } = props;\n  const [values, setValues] = React.useState(initialState);\n  const [inputRef, setInputFocus] = useFocus()\n\n  const onChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n\n  const handleGo = callback => event => {\n    let submittedAnswer = values.numberformat;\n    const question = new Question(\n      parseFloat(firstInput),\n      parseFloat(secondInput),\n      operation,\n      parseFloat(submittedAnswer),\n      Date.now()\n    );\n    setValues(initialState)\n    callback(question)\n    setInputFocus()\n\n  };\n\n  const questionHandler = handleGo(submissionHandler);\n  console.log('QuestionForm - ReRender')\n  window.requestAnimationFrame(setInputFocus);\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom={true}>\n        {operation.name}\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={5}>\n          <ButtonGroup\n            color=\"primary\"\n            aria-label=\"outlined primary button group\"\n          >\n            <Button\n              label=\"Button\"\n              size=\"large\"\n              variant=\"outlined\"\n              color=\"primary\"\n              style={{\n                fontSize: 30,\n              }}\n            >\n              <span>{firstInput}</span>\n            </Button>\n            <Button\n              label=\"Button\"\n              size=\"medium\"\n              variant=\"outlined\"\n              color=\"primary\"\n              style={{\n                fontSize: 25,\n              }}\n            >\n              <span>{operation.operation}</span>\n            </Button>\n            <Button\n              label=\"Button\"\n              size=\"large\"\n              variant=\"outlined\"\n              color=\"primary\"\n              style={{\n                fontSize: 30,\n              }}\n            >\n              <span>{secondInput}</span>\n            </Button>\n          </ButtonGroup>\n        </Grid>\n        <Grid item xs={12} sm={2}>\n          <Button\n            label=\"Button\"\n            size=\"large\"\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{\n              borderStyle: \"none\",\n              fontSize: 30,\n            }}\n          >\n            =\n          </Button>\n        </Grid>\n        <Grid item xs={12} sm={5}>\n          <ButtonGroup\n            color=\"primary\"\n            aria-label=\"outlined primary button group\"\n          >\n            <NumberInput value={values.numberformat} ref={inputRef} callback={questionHandler} handleChange={onChange}/>\n            <Button\n              label=\"Button\"\n              size=\"large\"\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={questionHandler}\n              style={{\n                fontSize: 30,\n              }}\n            >\n              GO\n            </Button>\n          </ButtonGroup>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n})\n\nexport default QuestionForm;","import React,{useRef} from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button } from \"@material-ui/core\";\nimport { ButtonGroup } from \"@material-ui/core\";\nimport Question from \"./model/Question\";\nimport NumberInput from \"./NumberInput\";\nimport 'katex/dist/katex.min.css';\nimport { InlineMath} from 'react-katex';\n\nconst useFocus = () => {\n  const htmlElRef = useRef(null)\n  const setFocus = () => {htmlElRef.current &&  htmlElRef.current.focus()}\n\n  return [ htmlElRef, setFocus ] \n}\n\nfunction getMathRender(number, operation) {\n  if('square'.startsWith(operation)) {\n    return number + \"^2\";\n  } \n  if('cube'.startsWith(operation)) {\n    return number + \"^3\";\n  } \n}\n\nconst QuestionForm2 = React.forwardRef((props, ref) => {\n\n  const initialState = { numberformat: \"\" }\n  const { firstInput, secondInput, operation, submissionHandler } = props;\n  const [values, setValues] = React.useState(initialState);\n  const [inputRef, setInputFocus] = useFocus()\n\n  const onChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n\n  const handleGo = callback => event => {\n    let submittedAnswer = values.numberformat;\n    const question = new Question(\n      parseFloat(firstInput),\n      parseFloat(secondInput),\n      operation.operation,\n      parseFloat(submittedAnswer),\n      Date.now()\n    );\n    setValues(initialState)\n    callback(question)\n    setInputFocus()\n\n  };\n\n  const questionHandler = handleGo(submissionHandler);\n  window.requestAnimationFrame(setInputFocus);\n  let text = getMathRender(firstInput, operation.id);\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom={true}>\n        Question\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={5}>\n            <Button\n              label=\"Button\"\n              size=\"large\"\n              variant=\"outlined\"\n              color=\"primary\"\n              style={{\n                fontSize: 30,\n              }}\n            >\n              <InlineMath>{text}</InlineMath>\n            </Button>\n            \n            \n        </Grid>\n        <Grid item xs={12} sm={2}>\n          <Button\n            label=\"Button\"\n            size=\"large\"\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{\n              borderStyle: \"none\",\n              fontSize: 30,\n            }}\n          >\n            =\n          </Button>\n        </Grid>\n        <Grid item xs={12} sm={5}>\n          <ButtonGroup\n            color=\"primary\"\n            aria-label=\"outlined primary button group\"\n          >\n            <NumberInput value={values.numberformat} ref={inputRef} callback={questionHandler} handleChange={onChange}/>\n            <Button\n              label=\"Button\"\n              size=\"large\"\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={questionHandler}\n              style={{\n                fontSize: 30,\n              }}\n            >\n              GO\n            </Button>\n          </ButtonGroup>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n})\n\nexport default QuestionForm2;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 500,\n  },\n});\n\n\nexport default function PracticeSummary(props) {\n  const classes = useStyles();\n  const rows = props.questions || [];\n  const incorrect = rows.filter(q => !q.result).length;\n\n  function caclulateSpeed() {\n    if(rows.length>0) {\n      let speedInMillis = (rows[0].submissionTime - rows[rows.length-1].submissionTime + 2)/rows.filter(q => q.result).length\n      return (speedInMillis/1000).toFixed(2);\n    }\n    return 9999999999;\n  }\n\n  return (\n    <React.Fragment>\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n        <TableHead>\n          <TableRow key='summaryHeader'>\n          <TableCell align=\"right\">Speed</TableCell>\n            <TableCell align=\"right\">Total</TableCell>\n            <TableCell align=\"right\">InCorrect</TableCell>\n            <TableCell align=\"right\">Correct</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          \n            <TableRow key='summary'>\n              <TableCell align=\"right\"><b>{caclulateSpeed()}</b></TableCell>\n              <TableCell align=\"right\">{rows.length}</TableCell>\n              <TableCell align=\"right\">{incorrect}</TableCell>\n              <TableCell align=\"right\">{rows.length - incorrect}</TableCell>\n            </TableRow>\n          \n        </TableBody>\n      </Table>\n    </TableContainer>\n\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Time</TableCell>\n            <TableCell align=\"right\">Result</TableCell>\n            <TableCell align=\"right\">input</TableCell>\n            <TableCell align=\"right\">input</TableCell>\n            <TableCell align=\"right\">Your Answer</TableCell>\n            <TableCell align=\"right\">Expected Answer</TableCell>\n            <TableCell align=\"right\">operation</TableCell>\n            <TableCell align=\"right\">Clue</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.submissionTime}>\n              <TableCell component=\"th\" scope=\"row\">\n                {new Date(row.submissionTime).toLocaleTimeString()}\n              </TableCell>\n              <TableCell align=\"right\">{row.result ? <CheckIcon /> : <CloseIcon />}</TableCell>              \n              <TableCell align=\"right\">{row.firstNum}</TableCell>\n              <TableCell align=\"right\">{row.secondNum}</TableCell>\n              <TableCell align=\"right\">{row.submittedAnswer}</TableCell>\n              <TableCell align=\"right\">{row.expectedAnswer}</TableCell>\n              <TableCell align=\"right\">{row.operation}</TableCell>\n              <TableCell align=\"right\">{row.operation}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </React.Fragment>\n  );\n}\n","/* eslint-disable arrow-parens */\nconst partition = require(\"lodash/fp/partition\");\nconst groupBy = require(\"lodash/fp/groupBy\");\n\nfunction countBy(input) {\n  const a = input.reduce((acc, curr) => {\n    if (typeof acc[curr] === 'undefined') {\n      acc[curr] = 1;\n    } else {\n      acc[curr] += 1;\n    }\n    return acc;\n  }, {});\n  return a;\n};\n\n\nconst operations = {\n  '+': (a, b) => {\n  let answer =  a + b;\n    console.log(`Lambda answer ${answer}`)\n    return answer\n  },\n  'x': (a, b) => a * b,\n  'X': (a, b) => a * b,\n  'square': (a, b) => a * a,\n  'cube': (a, b) => a * a * a,\n  '/': (a, b) => a / b,\n  '-': (a, b) => a - b,\n  junior_addition: (a, b) => a + b,\n  junior_counting: (a, b) => a,\n  junior_subtraction: (a, b) => a - b,\n  junior_multiplication: (a, b) => a * b,\n  addition: (a, b) => a + b,\n  multiplication: (a, b) => a * b,\n  subtraction: (a, b) => a - b,\n  division: (a, b) => a / b,\n  square: (a) => a * a,\n  cube: (a) => a * a * a,\n  squareroot: (a) => Math.sqrt(a),\n  cuberoot: (a) => Math.cbrt(a),\n};\n\nexport default class Evaluator {\n  constructor(name) {\n    this.name = name;\n  }\n\n  static answer(question) {\n    console.log(question);\n    debugger;\n    let func = operations[question.operation];\n    if(func == null)\n      func = operations[question.operation.operation];\n    return func(question.firstNum, question.secondNum);\n  }\n\n  static evaluateQuestion(question) {\n    let func = operations[question.operation];\n    if(func == null)\n      func = operations[question.operation.operation];\n    return Math.abs(func(question.firstNum, question.secondNum) - question.submittedAnswer) < 0.1;\n  }\n\n  static analyze([...questions]) {\n    questions.forEach((q) => {\n      // eslint-disable-next-line no-param-reassign\n      q.result = operations[q.operation](q.firstNum, q.secondNum) === q.submittedAnswer;\n    });\n    let groupByOperations = groupBy(q => q.operation, questions);\n    console.log('1......' + JSON.stringify(groupByOperations));\n    let groupByOperationsNumbers =groupByOperations.map(results => partition(q => q.result, results));\n    return groupByOperationsNumbers;\n  }\n\n  static evaluate([...questions]) {\n    const filteredWins = questions\n      .filter((q) => q.operation === 'multiplication')\n      .filter((q) => q.firstNum * q.secondNum === q.submittedAnswer)\n      .map((q) => [q.firstNum, q.secondNum]);\n\n    const wins = (typeof filteredWins !== 'undefined') ? [].concat.apply([], filteredWins) : [];\n\n    const filteredNeedPractice = questions\n      .filter((q) => q.operation === 'multiplication')\n      .filter((q) => q.firstNum * q.secondNum !== q.submittedAnswer)\n      .map((q) => [q.firstNum, q.secondNum]);\n\n    const needPractice = (typeof filteredNeedPractice !== 'undefined') ? [].concat.apply([], filteredNeedPractice) : [];\n\n    const summary = {\n      wins: countBy(wins),\n      needPractice: countBy(needPractice),\n    };\n    return summary;\n  }\n}","//import { shuffle } from 'lodash/shuffle';\nconst shuffle = require('lodash/shuffle');\nconst difference = require('lodash/difference');\n\n/* exported distort */\nexport function distort(i) {\n  if (Math.random() > 0.5) {\n    return i + 1;\n  } else {\n    return i - 1;\n  }\n}\n\nexport default class Random {\n  /**\n   * Credit : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\n   * @param {*} min\n   * @param {*} max\n   */\n  static getRandomIntInclusive(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min; // The maximum is inclusive and the minimum is inclusive\n  }\n  \n\n  static getRandomIntInclusiveWithExceptions(min, max, excludes) {\n    // eslint-disable-next-line arrow-parens\n    const sequence = Array.from(Array(max - min).keys()).map(i => i + min).map(i => ''+i)\n        .filter( i => excludes.indexOf(i) < 0 ).filter( i => excludes.indexOf(+i) < 0 );\n    const generated = difference(sequence, excludes);\n    const answer = shuffle(Array.from(generated))[0];\n    return parseInt(answer, 10);\n  }\n}\n","import Random from \"./random\";\n//import { shuffle } from 'lodash/shuffle';\nconst shuffle = require('lodash/shuffle');\n\nexport default class Generator {\n\n  static getShuffledRange(min, max, excludes, steps) {\n    const range = max - min;\n    const generated = Array.from(Array(range).keys())\n    .filter(i => i+min)\n    .filter(i => excludes.indexOf(+i) < 0);\n    return shuffle(generated);\n  }\n\n  static getStatefulShuffledGenerator(min, max, excludes, steps) {\n    const range = max - min;\n    const generated = Array.from(Array(range).keys())\n    .filter(i => i+min)\n    .filter(i => excludes.indexOf(+i) < 0);\n    let shuffled =  shuffle(generated);\n    return {\n      getNext: function() {\n        let [head, ...tail] = shuffled;\n        shuffled = [...tail, head];\n        return head;\n      }\n    }\n  }\n\n  \n\n\n  static getTwoNumbers(min, max, excludes) {\n    const firstNum = Random.getRandomIntInclusiveWithExceptions(min, max, excludes);\n    const secondNum = Random.getRandomIntInclusiveWithExceptions(min, max, excludes);\n    return [firstNum, secondNum];\n  }\n\n  static isCommonBase(inputs) {\n    let [firstNum, secondNum] = inputs;\n    let firstOnes = firstNum % 10;\n    let secondOnes = secondNum % 10;\n    let firstTens = Math.floor(firstNum / 10);\n    let secondTens = Math.floor(secondNum / 10);\n    return ((firstOnes + secondOnes) % 10 === 0) && (firstTens === secondTens);\n  }\n\n  static isSameTens(inputs) {\n    let [firstNum, secondNum] = inputs;\n    let firstOnes = firstNum % 10;\n    let secondOnes = secondNum % 10;\n    let firstTens = Math.floor(firstNum / 10);\n    let secondTens = Math.floor(secondNum / 10);\n    return ((firstOnes + secondOnes) % 10 !== 0) && (firstTens === secondTens);\n  }\n\n\n  static isEndsIn5(inputs) {\n    let [firstNum, secondNum] = inputs;\n    let firstOnes = firstNum % 10;\n    let secondOnes = secondNum % 10;\n    return (firstOnes === secondOnes) && (firstOnes === 5);\n  }  \n\n  static getCommonBase10sComplement(min, max, excludes) {\n    let firstNum = Random.getRandomIntInclusiveWithExceptions(min, max, excludes);\n    let ones = firstNum % 10;\n    let base = firstNum - ones\n    let tensComplement = 10 - ones;\n    let secondNum = base + tensComplement;\n    return [firstNum, secondNum];\n  }\n\n  static getJunior5s(min, max, excludes) {\n    return [5, Random.getRandomIntInclusive(1, 9)];\n  }\n\n\n  static getSameTens(min, max, excludes) {\n    const firstNum = Random.getRandomIntInclusiveWithExceptions(min, max, excludes);\n    const ones = Random.getRandomIntInclusive(1, 9);\n    const base = Math.floor(firstNum / 10);\n    const secondNum = (base * 10) + ones;\n    return [firstNum, secondNum];\n  }\n\n  \n\n  static getNumberEndsWith5(min, max, excludes) {\n    const firstNum = Random.getRandomIntInclusiveWithExceptions(min, max, excludes);\n    const secondNum = Random.getRandomIntInclusiveWithExceptions(min, max, [firstNum, ...excludes]);\n    return [(firstNum * 10) + 5, (secondNum * 10) + 5];\n  }\n\n}","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"20ch\",\n    },\n  },\n}));\n\nexport default function StudentSession(props) {\n  const classes = useStyles();\n\n  const [localSession, setLocalSession] = React.useState({operation: 'addition', name: ''});\n\n  const handleOperation = (event) => {\n    console.log(`Selected operation :: ${event.target.value}`)\n    setLocalSession({\n      ...localSession,\n      [event.target.name]: event.target.value\n    })\n  };\n\n  const { callback, operations } = props;\n\n  const handleTab = (e, callback) => {\n    const KEYCODE_TAB = 9;\n    const KEYCODE_ENTER = 13;\n    if (e.keyCode === KEYCODE_TAB || e.keyCode === KEYCODE_ENTER) {\n      if (localSession.name && localSession.name.length >= 2) {\n        callback(localSession)\n      }\n    }\n  }\n  \n  \n  const listItems = Object.entries(operations).sort( (a,b) => a[1].level - b[1].level).map( operation => <FormControlLabel value={operation[0]} control={<Radio />} label={operation[1].name} /> )\n  \n\n  return (\n    <React.Fragment>\n      <Grid container spacing={3}>\n      <Grid item xs={12}>\n\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Exercise</FormLabel>\n              <RadioGroup row  aria-label=\"operation\" name=\"operation\" value={localSession.operation} onChange={handleOperation}>\n            {listItems}\n            </RadioGroup>\n          </FormControl>          \n      </Grid>\n      <Grid item xs={12}>\n        <form className={classes.root} noValidate autoComplete=\"off\">\n          <TextField\n            id=\"outlined-basic\" label=\"name\" variant=\"outlined\" size=\"medium\"\n            name=\"name\"\n            value={localSession.name}\n            autoFocus\n            onKeyDown={e => handleTab(e, callback)} onChange={handleOperation}\n          />\n          <Button\n            label=\"Start\"\n            size=\"small\" variant=\"contained\" color=\"primary\"\n            onClick={e => callback(localSession)}\n            style={{\n              fontSize: 25,\n            }}\n          >\n            Start\n          </Button>      \n        </form>\n      </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect  } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport QuestionForm from './QuestionForm';\nimport QuestionForm2 from './QuestionForm2';\nimport PracticeSummary from './PracticeSummary';\nimport Question from './model/Question'\nimport Evaluator from \"./model/Evaluator\";\nimport Generator from \"./tools/generator\";\nimport StudentSession from './StudentSession';\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        DailyPractice\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst steps = ['Question', 'Question', 'Review your order'];\n\nfunction getGeneratorFor(operation) {\n  console.log('getGeneratorFor' + operation);\n  const min = mathOperation[operation].min , max = mathOperation[operation].max, excludes = mathOperation[operation].excludes;\n\n  const randomNumbers = Generator.getTwoNumbers(min, max, excludes);\n\n  if ('onesSumTo10'.startsWith(operation)) {\n    return Generator.getCommonBase10sComplement(min, max, excludes)\n  } else if ('getNumberEndsWith5'.startsWith(operation)) {\n    return Generator.getNumberEndsWith5(min, max, excludes)\n  } else if ('sameTens'.startsWith(operation)) {\n    return  Generator.getSameTens(min, max, excludes)\n  } else if ('subtraction'.startsWith(operation)) {    \n    randomNumbers.sort((a, b) => b - a);\n    return randomNumbers;\n  }  else if ('division'.startsWith(operation)) {    \n    randomNumbers.sort((a, b) => b - a);\n    return [randomNumbers[1]*randomNumbers[0], randomNumbers[0]];\n  }  else if ('square'.startsWith(operation) ) {\n    return [mathOperation[operation].generator.getNext(), 2]\n  }  else if ('cube'.startsWith(operation) ) {\n    return [mathOperation[operation].generator.getNext(), 3]\n  }\n\n  return randomNumbers;        \n}\n\nlet cubeGenerator = Generator.getStatefulShuffledGenerator(2,25, [5,10]);\n\nlet squareGenerator = Generator.getStatefulShuffledGenerator(2,50, [5,10]);\n\nconst mathOperation = {\n  'onesSumTo10' : { id:'onesSumTo10', level: 50, name: 'One`s Sum To 10', operation: 'X',    min: 20,    max: 40, excludes: [5,10,15,11,20]  },\n  'sameTens' : { id:'sameTens', level: 70, name: 'SameTens', operation: 'X',    min: 11,    max: 100, excludes: [5,10,15,11,20] },\n  'getNumberEndsWith5' : { id:'getNumberEndsWith5', level: 60, name: 'Number 5`s (x)', operation: 'X',    min: 2,    max: 9, excludes: [0] },\n  'multiplication': { id:'multiplication', level: 40, name: 'Multiplication (x)', operation: 'X',    min: 9,    max: 21, excludes: [5,10] },\n  'multiplicationJr': { id:'multiplicationJr', level: 30, name: 'Basics Multiplication (x)', operation: 'X',    min: 2,    max: 11, excludes: [5,10] },\n  'addition' : { id:'addition', level: 10, name: 'Addition (+)', operation: '+',    min: 20,    max: 40, excludes: [5,10] },\n  'division' : { id:'division', level: 80, name: 'Division &divide;', operation: '/',    min: 2,    max: 20, excludes: [5,10] },\n  'subtraction' : { id:'subtraction', level: 20, name: 'Subtraction (-)', operation: '-',    min: 2,    max: 40, excludes: [5,10] },\n  'square' : { id:'square', level: 90, name: 'Square (x^2)', operation: 'square',    min: 2,    max: 50, excludes: [5,10], generator: squareGenerator },\n  'cube' : { id:'cube', level: 100, name: 'Cube (x^3)', operation: 'cube',    min: 2,    max: 25, excludes: [5,10], generator: cubeGenerator },\n}\n\nexport default function Checkout() {\n  const initialSession = { name: \"\", sid: \"\", operation: \"onesSumTo10\" }\n\n  const classes = useStyles();\n  const [questions, setQuestions] = React.useState([]);\n  const [session, setSession] = React.useState(initialSession);\n  \n  const submissionHandler = (question) => {\n    let questionWithResult = Question.questionWithResult(question, Evaluator.answer(question), Evaluator.evaluateQuestion(question))\n    const newQuestions = [questionWithResult , ...questions]\n    setQuestions(newQuestions);\n  };   \n\n  const onNameChange = (event) => {\n    setSession({\n      ...session,\n      [event.target.name]: event.target.value,\n      sid: ''\n    });\n  };\n\n  useEffect(() => {\n    if(questions && questions.length>4 && session.sid.length > 2) {\n      localStorage.setItem(session.sid, JSON.stringify(questions));\n    }\n  }, [questions]);\n  \n  const sessionHandler = (localSession) => {\n    let sessionTime = (new Date()).toISOString();\n    const sid = `Practice_${localSession.name}@${sessionTime}~${localSession.operation}`;\n    console.dir(`Local session from session handler - ${localSession}`)\n    setSession({\n      ...localSession,\n      sid\n    });\n    setQuestions([])\n  }\n\n  const generatedNumbers = getGeneratorFor(session.operation);\n\n  let questionForm = null;\n  \n  if( session.operation === 'square' || session.operation === 'cube' ) {\n    questionForm = <QuestionForm2 submissionHandler={submissionHandler} firstInput={generatedNumbers[0]} secondInput={generatedNumbers[1]} operation={mathOperation[session.operation]} />\n  } else {\n    questionForm = <QuestionForm submissionHandler={submissionHandler} firstInput={generatedNumbers[0]} secondInput={generatedNumbers[1]} operation={mathOperation[session.operation]} />\n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"absolute\" color=\"transparent\" className={classes.appBar}>\n        <Toolbar variant=\"dense\">\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Daily Practice\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n        { session.sid.length === 0  &&        <StudentSession operations={mathOperation} callback={sessionHandler} /> }\n\n        { session.sid.length > 10  &&\n          <React.Fragment>\n\n                <Card className={classes.root}>\n                  <div className={classes.details}>\n                    <CardContent className={classes.content}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={4}>\n                          <Typography component=\"h3\" variant=\"h3\">\n                            {session.name} \n                            </Typography>\n                          </Grid>\n                          <Grid item xs={12} sm={4}>\n                            <img src=\"/icon/1.png\" alt=\"recipe thumbnail\" height=\"50\" width=\"50\"/>\n                          </Grid>\n                          <Grid item xs={12} sm={4}>\n                            <Button label=\"End\" size=\"small\" variant=\"contained\" color=\"secondary\" onClick={onNameChange} style={{fontSize: 25,}}>\n                              End\n                            </Button>\n                          </Grid>\n                        </Grid>\n                    </CardContent>\n                  </div>\n                </Card>\n               {questionForm}\n              <PracticeSummary questions={questions}/>\n          </React.Fragment>\n        }\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Checkout from './Checkout'\n\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Checkout />\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}