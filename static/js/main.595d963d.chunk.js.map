{"version":3,"sources":["model/Question.js","NumberInput.js","QuestionForm.js","PracticeSummary.js","model/Evaluator.js","tools/random.js","tools/generator.js","StudentSession.js","Checkout.js","serviceWorker.js","index.js"],"names":["Question","firstNum","secondNum","operation","submittedAnswer","submissionTime","this","expectedAnswer","result","question","qsWithAnswer","qsWithResult","questionWithAnswers","NumberFormatCustom","props","inputRef","onChange","other","getInputRef","onValueChange","values","target","name","value","thousandSeparator","isNumericString","prefix","NumberInput","handleChange","callback","Fragment","TextField","label","autoFocus","onKeyDown","e","keyCode","length","handleTab","id","InputProps","inputComponent","QuestionForm","initialState","numberformat","firstInput","secondInput","submissionHandler","React","useState","setValues","questionHandler","event","parseFloat","Date","now","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","sm","ButtonGroup","color","aria-label","Button","size","style","fontSize","borderStyle","onClick","useStyles","makeStyles","table","minWidth","PracticeSummary","classes","rows","questions","TableContainer","component","Paper","Table","className","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","toLocaleTimeString","partition","require","groupBy","countBy","input","reduce","acc","curr","operations","a","b","answer","console","log","junior_addition","junior_counting","junior_subtraction","junior_multiplication","addition","multiplication","subtraction","division","square","cube","squareroot","Math","sqrt","cuberoot","cbrt","Evaluator","func","abs","forEach","q","groupByOperations","JSON","stringify","results","filteredWins","filter","wins","concat","apply","filteredNeedPractice","needPractice","shuffle","difference","Random","min","max","ceil","floor","random","excludes","sequence","Array","from","keys","i","indexOf","generated","parseInt","Generator","steps","range","getRandomIntInclusiveWithExceptions","inputs","firstOnes","secondOnes","firstTens","secondTens","ones","getRandomIntInclusive","theme","root","margin","width","StudentSession","noValidate","autoComplete","Copyright","Link","href","getFullYear","appBar","position","layout","marginLeft","marginRight","breakpoints","up","paper","marginTop","marginBottom","padding","stepper","buttons","display","justifyContent","button","Checkout","activeStep","setActiveStep","setQuestions","sid","session","setSession","useEffect","CssBaseline","AppBar","Toolbar","noWrap","sessionTime","toISOString","FormControlLabel","control","Avatar","alt","src","step","generatedNumbers","getTwoNumbers","Error","getStepContent","newQuestions","questionWithResult","evaluateQuestion","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.595d963d.chunk.js","sourcesContent":["export default class  Question {\n  constructor(firstNum, secondNum, operation, submittedAnswer, submissionTime) {\n    this.firstNum = firstNum;\n    this.secondNum = secondNum;\n    this.operation = operation;\n    this.submittedAnswer = submittedAnswer;\n    this.submissionTime = submissionTime;\n    this.expectedAnswer = null;\n    this.result = null;\n  }\n  static questionWithAnswers(question, expectedAnswer){\n    let qsWithAnswer = new Question(question.firstNum, question.secondNum, question.operation, question.submittedAnswer, question.submissionTime);\n    qsWithAnswer.expectedAnswer = expectedAnswer;\n    qsWithAnswer.result = null;\n    return qsWithAnswer;\n  }\n  static questionWithResult(question, expectedAnswer, result){\n    let qsWithResult = this.questionWithAnswers(question, expectedAnswer);\n    qsWithResult.result = result;\n    return qsWithResult;\n  }  \n}\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport NumberFormat from \"react-number-format\";\nimport PropTypes from \"prop-types\";\n\n\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\n\nexport default function NumberInput(props) {\n\n  const { value, handleChange, callback } = props;\n\n  const handleTab = (e, callback) => {\n    const KEYCODE_TAB = 9;\n    const KEYCODE_ENTER = 13;\n    if (e.keyCode === KEYCODE_TAB || e.keyCode === KEYCODE_ENTER) {\n      if (value.length >= 1) {\n        callback(e)\n      }\n    }\n  }    \n\n  return (\n    <React.Fragment>\n      <TextField\n        label=\"\"\n        value={value}\n        autoFocus \n        onKeyDown={e => handleTab(e, callback)}\n        onChange={handleChange}\n        name=\"numberformat\"\n        id=\"formatted-numberformat-input\"\n        InputProps={{\n          inputComponent: NumberFormatCustom,\n        }}\n    />\n  </React.Fragment>);\n}","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Button } from \"@material-ui/core\";\nimport { ButtonGroup } from \"@material-ui/core\";\nimport Question from \"./model/Question\";\nimport NumberInput from \"./NumberInput\";\n\n\n\nexport default function QuestionForm(props) {\n  const initialState = { numberformat: \"\" }\n  const { firstInput, secondInput, operation, submissionHandler } = props;\n  const [values, setValues] = React.useState(initialState);\n\n  const onChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n\n  const handleGo = callback => event => {\n    let submittedAnswer = values.numberformat;\n    const question = new Question(\n      parseFloat(firstInput),\n      parseFloat(secondInput),\n      operation,\n      parseFloat(submittedAnswer),\n      Date.now()\n    );\n    setValues(initialState)\n    callback(question)\n  };\n\n  const questionHandler = handleGo(submissionHandler);\n\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom={true}>\n        Question\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={5}>\n          <ButtonGroup\n            color=\"primary\"\n            aria-label=\"outlined primary button group\"\n          >\n            <Button\n              label=\"Button\"\n              size=\"large\"\n              variant=\"outlined\"\n              color=\"primary\"\n              style={{\n                fontSize: 30,\n              }}\n            >\n              <span>{firstInput}</span>\n            </Button>\n            <Button\n              label=\"Button\"\n              size=\"medium\"\n              variant=\"outlined\"\n              color=\"primary\"\n              style={{\n                fontSize: 25,\n              }}\n            >\n              <span>{operation}</span>\n            </Button>\n            <Button\n              label=\"Button\"\n              size=\"large\"\n              variant=\"outlined\"\n              color=\"primary\"\n              style={{\n                fontSize: 30,\n              }}\n            >\n              <span>{secondInput}</span>\n            </Button>\n          </ButtonGroup>\n        </Grid>\n        <Grid item xs={12} sm={2}>\n          <Button\n            label=\"Button\"\n            size=\"large\"\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{\n              borderStyle: \"none\",\n              fontSize: 30,\n            }}\n          >\n            =\n          </Button>\n        </Grid>\n        <Grid item xs={12} sm={5}>\n          <ButtonGroup\n            color=\"primary\"\n            aria-label=\"outlined primary button group\"\n          >\n            <NumberInput value={values.numberformat} callback={questionHandler} handleChange={onChange}/>\n            <Button\n              label=\"Button\"\n              size=\"large\"\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={questionHandler}\n              style={{\n                fontSize: 30,\n              }}\n            >\n              GO\n            </Button>\n          </ButtonGroup>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 500,\n  },\n});\n\n\nexport default function PracticeSummary(props) {\n  const classes = useStyles();\n  const rows = props.questions || [];\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Time</TableCell>\n            <TableCell align=\"right\">Result</TableCell>\n            <TableCell align=\"right\">input</TableCell>\n            <TableCell align=\"right\">input</TableCell>\n            <TableCell align=\"right\">operation</TableCell>\n            <TableCell align=\"right\">Your Answer</TableCell>\n            <TableCell align=\"right\">Expected Answer</TableCell>\n            <TableCell align=\"right\">Clue</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.submissionTime}>\n              <TableCell component=\"th\" scope=\"row\">\n                {new Date(row.submissionTime).toLocaleTimeString()}\n              </TableCell>\n              <TableCell align=\"right\">{row.result ? \"Correct!\" : \"Wrong\"}</TableCell>\n              <TableCell align=\"right\">{row.firstNum}</TableCell>\n              <TableCell align=\"right\">{row.secondNum}</TableCell>\n              <TableCell align=\"right\">{row.operation}</TableCell>\n              <TableCell align=\"right\">{row.submittedAnswer}</TableCell>\n              <TableCell align=\"right\">{row.expectedAnswer}</TableCell>\n              <TableCell align=\"right\">{row.operation}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","/* eslint-disable arrow-parens */\nconst partition = require(\"lodash/fp/partition\");\nconst groupBy = require(\"lodash/fp/groupBy\");\n\nfunction countBy(input) {\n  const a = input.reduce((acc, curr) => {\n    if (typeof acc[curr] === 'undefined') {\n      acc[curr] = 1;\n    } else {\n      acc[curr] += 1;\n    }\n    return acc;\n  }, {});\n  return a;\n};\n\n\nconst operations = {\n  '+': (a, b) => {\n  let answer =  a + b;\n    console.log(`Lambda answer ${answer}`)\n    return answer\n  },\n  'x': (a, b) => a * b,\n  junior_addition: (a, b) => a + b,\n  junior_counting: (a, b) => a,\n  junior_subtraction: (a, b) => a - b,\n  junior_multiplication: (a, b) => a * b,\n  addition: (a, b) => a + b,\n  multiplication: (a, b) => a * b,\n  subtraction: (a, b) => a - b,\n  division: (a, b) => a / b,\n  square: (a) => a * a,\n  cube: (a) => a * a * a,\n  squareroot: (a) => Math.sqrt(a),\n  cuberoot: (a) => Math.cbrt(a),\n};\n\nexport default class Evaluator {\n  constructor(name) {\n    this.name = name;\n  }\n\n  static answer(question) {\n    const func = operations[question.operation];\n    return func(question.firstNum, question.secondNum);\n  }\n\n  static evaluateQuestion(question) {\n    const func = operations[question.operation];\n    return Math.abs(func(question.firstNum, question.secondNum) - question.submittedAnswer) < 0.1;\n  }\n\n  static analyze([...questions]) {\n    questions.forEach((q) => {\n      // eslint-disable-next-line no-param-reassign\n      q.result = operations[q.operation](q.firstNum, q.secondNum) === q.submittedAnswer;\n    });\n    let groupByOperations = groupBy(q => q.operation, questions);\n    console.log('1......' + JSON.stringify(groupByOperations));\n    let groupByOperationsNumbers =groupByOperations.map(results => partition(q => q.result, results));\n    return groupByOperationsNumbers;\n  }\n\n  static evaluate([...questions]) {\n    const filteredWins = questions\n      .filter((q) => q.operation === 'multiplication')\n      .filter((q) => q.firstNum * q.secondNum == q.submittedAnswer)\n      .map((q) => [q.firstNum, q.secondNum]);\n\n    const wins = (typeof filteredWins !== 'undefined') ? [].concat.apply([], filteredWins) : [];\n\n    const filteredNeedPractice = questions\n      .filter((q) => q.operation === 'multiplication')\n      .filter((q) => q.firstNum * q.secondNum !== q.submittedAnswer)\n      .map((q) => [q.firstNum, q.secondNum]);\n\n    const needPractice = (typeof filteredNeedPractice !== 'undefined') ? [].concat.apply([], filteredNeedPractice) : [];\n\n    const summary = {\n      wins: countBy(wins),\n      needPractice: countBy(needPractice),\n    };\n    return summary;\n  }\n}","//import { shuffle } from 'lodash/shuffle';\nconst shuffle = require('lodash/shuffle');\nconst difference = require('lodash/difference');\n\nfunction distort(i) {\n  if (Math.random() > 0.5) {\n    return i + 1;\n  } else {\n    return i - 1;\n  }\n}\n\nexport default class Random {\n  /**\n   * Credit : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\n   * @param {*} min\n   * @param {*} max\n   */\n  static getRandomIntInclusive(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min; // The maximum is inclusive and the minimum is inclusive\n  }\n  \n\n  static getRandomIntInclusiveWithExceptions(min, max, excludes) {\n    // eslint-disable-next-line arrow-parens\n    const sequence = Array.from(Array(max - min).keys()).map(i => i + min).map(i => ''+i)\n        .filter( i => excludes.indexOf(i) < 0 ).filter( i => excludes.indexOf(+i) < 0 );\n    const generated = difference(sequence, excludes);\n    const answer = shuffle(Array.from(generated))[0];\n    return parseInt(answer, 10);\n  }\n}\n","import Random from \"./random\";\n//import { shuffle } from 'lodash/shuffle';\nconst shuffle = require('lodash/shuffle');\nconst difference = require('lodash/difference');\n\nexport default class Generator {\n\n  static getShuffledRange(min, max, excludes, steps) {\n    const range = max - min;\n    const generated = Array.from(Array(range).keys())\n    .filter(i => i+min)\n    .filter(i => excludes.indexOf(+i) < 0);\n    return shuffle(generated);\n  }\n\n\n  static getTwoNumbers(min, max, excludes) {\n    const firstNum = Random.getRandomIntInclusiveWithExceptions(min, max, excludes);\n    const secondNum = Random.getRandomIntInclusiveWithExceptions(min, max, excludes);\n    return [firstNum, secondNum];\n  }\n\n  static isCommonBase(inputs) {\n    let [firstNum, secondNum, ..._] = inputs;\n    let firstOnes = firstNum % 10;\n    let secondOnes = secondNum % 10;\n    let firstTens = Math.floor(firstNum / 10);\n    let secondTens = Math.floor(secondNum / 10);\n    return ((firstOnes + secondOnes) % 10 == 0) && (firstTens === secondTens);\n  }\n\n  static isSameTens(inputs) {\n    let [firstNum, secondNum, ..._] = inputs;\n    let firstOnes = firstNum % 10;\n    let secondOnes = secondNum % 10;\n    let firstTens = Math.floor(firstNum / 10);\n    let secondTens = Math.floor(secondNum / 10);\n    return ((firstOnes + secondOnes) % 10 !== 0) && (firstTens === secondTens);\n  }\n\n\n  static isEndsIn5(inputs) {\n    let [firstNum, secondNum, ..._] = inputs;\n    let firstOnes = firstNum % 10;\n    let secondOnes = secondNum % 10;\n    return (firstOnes === secondOnes) && (firstOnes === 5);\n  }  \n\n  static getCommonBase10sComplement(min, max, excludes) {\n    let firstNum = Random.getRandomIntInclusiveWithExceptions(min, max, excludes);\n    let ones = firstNum % 10;\n    let base = firstNum - ones\n    let tensComplement = 10 - ones;\n    let secondNum = base + tensComplement;\n    return [firstNum, secondNum];\n  }\n\n  static getJunior5s(min, max, excludes) {\n    return [5, Random.getRandomIntInclusive(1, 9)];\n  }\n\n\n  static getSameTens(min, max, excludes) {\n    const firstNum = Random.getRandomIntInclusiveWithExceptions(min, max, excludes);\n    const ones = Random.getRandomIntInclusive(1, 9);\n    const base = Math.floor(firstNum / 10);\n    const secondNum = (base * 10) + ones;\n    return [firstNum, secondNum];\n  }\n\n  \n\n  static getNumberEndsWith5(min, max, excludes) {\n    const firstNum = Random.getRandomIntInclusiveWithExceptions(min, max, excludes);\n    const secondNum = Random.getRandomIntInclusiveWithExceptions(min, max, [firstNum, ...excludes]);\n    return [(firstNum * 10) + 5, (secondNum * 10) + 5];\n  }\n\n\n\n}","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { ButtonGroup } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"20ch\",\n    },\n  },\n}));\n\nexport default function StudentSession(props) {\n  const classes = useStyles();\n\n  const { value, handleChange, callback } = props;\n\n  const handleTab = (e, callback) => {\n    const KEYCODE_TAB = 9;\n    const KEYCODE_ENTER = 13;\n    if (e.keyCode === KEYCODE_TAB || e.keyCode === KEYCODE_ENTER) {\n      if (value.length >= 1) {\n        callback(e)\n      }\n    }\n  }   \n\n  return (\n    <React.Fragment>\n      <Grid item xs={12}>\n        <form className={classes.root} noValidate autoComplete=\"off\">\n          <TextField\n            id=\"outlined-basic\" label=\"name\" variant=\"outlined\" size=\"medium\"\n            name=\"name\"\n            value={value}  onKeyDown={e => handleTab(e, callback)} onChange={handleChange}\n          />\n          <Button\n            label=\"Start\"\n            size=\"small\" variant=\"outlined\" color=\"primary\"\n            onClick={callback}\n            style={{\n              fontSize: 25,\n            }}\n          >\n            Start\n          </Button>\n        </form>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport QuestionForm from './QuestionForm';\nimport PracticeSummary from './PracticeSummary';\nimport Question, {QuestionWithAnswer} from './model/Question'\nimport Evaluator from \"./model/Evaluator\";\nimport Generator from \"./tools/generator\";\nimport StudentSession from './StudentSession';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Avatar from '@material-ui/core/Avatar';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        DailyPractice\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst steps = ['Question', 'Question', 'Review your order'];\n\nfunction getStepContent(step, submissionHandler) {\n  const generatedNumbers = Generator.getTwoNumbers(3,40,[10,5]);\n  switch (step) {\n    case 0:\n      return <QuestionForm submissionHandler={submissionHandler} firstInput={generatedNumbers[0]} secondInput={generatedNumbers[1]} operation='+'/>;\n    case 1:\n      return <QuestionForm submissionHandler={submissionHandler} firstInput={generatedNumbers[0]} secondInput={generatedNumbers[1]} operation='x'/>;\n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function Checkout() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(1);\n  const [questions, setQuestions] = React.useState([]);\n\n  const submissionHandler = (question) => {\n    let questionWithResult = Question.questionWithResult(question, Evaluator.answer(question), Evaluator.evaluateQuestion(question))\n    const newQuestions = [questionWithResult , ...questions]\n    setQuestions(newQuestions);\n  };\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const initialSession = { name: \"\", sid: \"\" }\n  const [session, setSession] = React.useState(initialSession);\n\n  const onNameChange = (event) => {\n    setSession({\n      ...session,\n      [event.target.name]: event.target.value,\n    });\n  };\n  \n  const sessionHandler = (e) => {\n    let sessionTime = (new Date()).toISOString();\n    const sid = `Practice_${session.name}@${sessionTime}`;\n    setSession({\n      ...session,\n      sid\n    });\n    setQuestions([])\n  }\n\n  useEffect(() => {console.log(session.sid)}, [session]);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"absolute\" color=\"transparent\" className={classes.appBar}>\n        <Toolbar variant=\"dense\">\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Daily Practice\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n        <StudentSession value={session.name} callback={sessionHandler} handleChange={onNameChange}/>\n\n        { session.sid.length > 10  &&\n          <Typography component=\"h3\" variant=\"h6\" align=\"center\">             \n              <FormControlLabel        control={<Avatar alt={session.name} src=\"/icon/1.png\" />}\n                label= {\"Welcome ! - \" + session.name}\n              />\n         </Typography>\n        }        \n          <React.Fragment>\n              <React.Fragment>\n                {getStepContent(activeStep, submissionHandler)}\n                \n                <PracticeSummary questions={questions}/>\n\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n          </React.Fragment>\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Checkout from './Checkout';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Checkout />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}